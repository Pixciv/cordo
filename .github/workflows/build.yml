name: Build Cordova Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Cordova CLI
        run: npm install -g cordova

      - name: Decode Keystore from Secrets
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > my-release-key.keystore

      - name: Create build.json for signing
        run: |
          cat > build.json <<EOF
          {
            "android": {
              "release": {
                "keystore": "my-release-key.keystore",
                "storePassword": "${{ secrets.KEYSTORE_PASSWORD }}",
                "alias": "${{ secrets.KEY_ALIAS }}",
                "password": "${{ secrets.KEY_PASSWORD }}",
                "keystoreType": ""
              }
            }
          }
          EOF

      - name: Build Release APK (Not AAB)
        run: |
          cordova build android --release --buildConfig=build.json -- --packageType=apk

      - name: Find and Copy APK
        run: |
          APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          echo "Found APK: $APK_PATH"
          if [ -f "$APK_PATH" ]; then
            mkdir -p upload-apk
            cp "$APK_PATH" upload-apk/
          else
            echo "❌ APK not found."
            exit 1
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: upload-apk/*.apk
